State 5 conflicts: 2 shift/reduce


Grammar

    0 $accept: prog FIN

    1 prog: listeFonctions listeInstructions

    2 listeFonctions: fonction
    3               | fonction listeFonctions

    4 fonction: declarationFonction

    5 declarationFonction: declarationFonctionEntier
    6                    | declarationFonctionBooleen

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    9 listeParametres: parametre
   10                | parametre VIRGULE listeParametres

   11 parametre: TYPE_BOOLEEN IDENTIFIANT
   12          | TYPE_ENTIER IDENTIFIANT

   13 listeInstructions: instruction
   14                  | instruction listeInstructions

   15 instruction: ecrire
   16            | declaration
   17            | affectation
   18            | declarationAffectation
   19            | conditionnelle
   20            | boucleTanque
   21            | retourner
   22            | appelFonction

   23 ecrire: ECRIRE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE POINT_VIRGULE

   24 declaration: TYPE_ENTIER IDENTIFIANT POINT_VIRGULE
   25            | TYPE_BOOLEEN IDENTIFIANT POINT_VIRGULE

   26 affectation: IDENTIFIANT AFFECTATION expr POINT_VIRGULE

   27 declarationAffectation: TYPE_ENTIER IDENTIFIANT AFFECTATION expr POINT_VIRGULE
   28                       | TYPE_BOOLEEN IDENTIFIANT AFFECTATION expr POINT_VIRGULE

   29 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   30               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi
   32               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

   33 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   34             | SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi

   35 boucleTanque: TANT_QUE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

   36 retourner: RETOURNER expr POINT_VIRGULE

   37 appelFonction: IDENTIFIANT PARENTHESE_OUVRANTE listeExpressions PARENTHESE_FERMANTE POINT_VIRGULE

   38 expr: expr PLUS expr
   39     | expr MOINS expr
   40     | expr FOIS expr
   41     | expr DIVISE expr
   42     | expr MODULO expr
   43     | MOINS expr
   44     | PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE
   45     | expr SUPERIEUR expr
   46     | expr SUPERIEUR_EGAL expr
   47     | expr INFERIEUR expr
   48     | expr INFERIEUR_EGAL expr
   49     | expr EGAL expr
   50     | expr DIFFERENT expr
   51     | expr ET expr
   52     | expr OU expr
   53     | NON expr
   54     | facteur

   55 listeExpressions: expr
   56                 | expr VIRGULE listeExpressions

   57 facteur: IDENTIFIANT
   58        | ENTIER
   59        | BOOLEEN
   60        | LIRE PARENTHESE_OUVRANTE PARENTHESE_FERMANTE
   61        | IDENTIFIANT PARENTHESE_OUVRANTE listeExpressions PARENTHESE_FERMANTE


Terminals, with rules where they appear

    FIN (0) 0
    error (256)
    IDENTIFIANT <ident> (258) 7 8 11 12 24 25 26 27 28 37 57 61
    PARENTHESE_OUVRANTE (259) 7 8 23 29 30 31 32 33 34 35 37 44 60 61
    PARENTHESE_FERMANTE (260) 7 8 23 29 30 31 32 33 34 35 37 44 60 61
    POINT_VIRGULE (261) 23 24 25 26 27 28 36 37
    ENTIER <entier> (262) 58
    ECRIRE (263) 23
    AFFECTATION (264) 26 27 28
    EGAL (265) 49
    DIFFERENT (266) 50
    INFERIEUR (267) 47
    SUPERIEUR (268) 45
    INFERIEUR_EGAL (269) 48
    SUPERIEUR_EGAL (270) 46
    ACCOLADE_FERMANTE (271) 7 8 29 30 31 32 33 34 35
    ACCOLADE_OUVRANTE (272) 7 8 29 30 31 32 33 34 35
    VIRGULE (273) 10 56
    SI (274) 29 30 31 32
    SINON (275) 30 32
    SINON_SI (276) 33 34
    LIRE (277) 60
    TANT_QUE (278) 35
    NON (279) 53
    ET (280) 51
    OU (281) 52
    RETOURNER (282) 36
    MOINS (283) 39 43
    DIVISE (284) 41
    MODULO (285) 42
    FOIS (286) 40
    PLUS (287) 38
    TYPE_ENTIER <ident> (288) 7 12 24 27
    TYPE_BOOLEEN <ident> (289) 8 11 25 28
    BOOLEEN <entier> (290) 59
    UMOINS (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    prog <prog> (38)
        on left: 1
        on right: 0
    listeFonctions <l_fonctions> (39)
        on left: 2 3
        on right: 1 3
    fonction <fonction> (40)
        on left: 4
        on right: 2 3
    declarationFonction <fonction> (41)
        on left: 5 6
        on right: 4
    declarationFonctionEntier <fonction> (42)
        on left: 7
        on right: 5
    declarationFonctionBooleen <fonction> (43)
        on left: 8
        on right: 6
    listeParametres <l_parametres> (44)
        on left: 9 10
        on right: 7 8 10
    parametre <parametre> (45)
        on left: 11 12
        on right: 9 10
    listeInstructions <l_inst> (46)
        on left: 13 14
        on right: 1 7 8 14 29 30 31 32 33 34 35
    instruction <inst> (47)
        on left: 15 16 17 18 19 20 21 22
        on right: 13 14
    ecrire <inst> (48)
        on left: 23
        on right: 15
    declaration <inst> (49)
        on left: 24 25
        on right: 16
    affectation <inst> (50)
        on left: 26
        on right: 17
    declarationAffectation <inst> (51)
        on left: 27 28
        on right: 18
    conditionnelle <inst> (52)
        on left: 29 30 31 32
        on right: 19
    listeSinonSi <inst> (53)
        on left: 33 34
        on right: 31 32 34
    boucleTanque <inst> (54)
        on left: 35
        on right: 20
    retourner <inst> (55)
        on left: 36
        on right: 21
    appelFonction <inst> (56)
        on left: 37
        on right: 22
    expr <exp> (57)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 23 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 55 56
    listeExpressions <l_exp> (58)
        on left: 55 56
        on right: 37 56 61
    facteur <exp> (59)
        on left: 57 58 59 60 61
        on right: 54


State 0

    0 $accept: . prog FIN

    TYPE_ENTIER   shift, and go to state 1
    TYPE_BOOLEEN  shift, and go to state 2

    prog                        go to state 3
    listeFonctions              go to state 4
    fonction                    go to state 5
    declarationFonction         go to state 6
    declarationFonctionEntier   go to state 7
    declarationFonctionBooleen  go to state 8


State 1

    7 declarationFonctionEntier: TYPE_ENTIER . IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT  shift, and go to state 9


State 2

    8 declarationFonctionBooleen: TYPE_BOOLEEN . IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT  shift, and go to state 10


State 3

    0 $accept: prog . FIN

    FIN  shift, and go to state 11


State 4

    1 prog: listeFonctions . listeInstructions

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 19
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 5

    2 listeFonctions: fonction .
    3               | fonction . listeFonctions

    TYPE_ENTIER   shift, and go to state 1
    TYPE_BOOLEEN  shift, and go to state 2

    TYPE_ENTIER   [reduce using rule 2 (listeFonctions)]
    TYPE_BOOLEEN  [reduce using rule 2 (listeFonctions)]
    $default      reduce using rule 2 (listeFonctions)

    listeFonctions              go to state 29
    fonction                    go to state 5
    declarationFonction         go to state 6
    declarationFonctionEntier   go to state 7
    declarationFonctionBooleen  go to state 8


State 6

    4 fonction: declarationFonction .

    $default  reduce using rule 4 (fonction)


State 7

    5 declarationFonction: declarationFonctionEntier .

    $default  reduce using rule 5 (declarationFonction)


State 8

    6 declarationFonction: declarationFonctionBooleen .

    $default  reduce using rule 6 (declarationFonction)


State 9

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT . PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 30


State 10

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT . PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 31


State 11

    0 $accept: prog FIN .

    $default  accept


State 12

   26 affectation: IDENTIFIANT . AFFECTATION expr POINT_VIRGULE
   37 appelFonction: IDENTIFIANT . PARENTHESE_OUVRANTE listeExpressions PARENTHESE_FERMANTE POINT_VIRGULE

    PARENTHESE_OUVRANTE  shift, and go to state 32
    AFFECTATION          shift, and go to state 33


State 13

   23 ecrire: ECRIRE . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE POINT_VIRGULE

    PARENTHESE_OUVRANTE  shift, and go to state 34


State 14

   29 conditionnelle: SI . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   30               | SI . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi
   32               | SI . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 35


State 15

   35 boucleTanque: TANT_QUE . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 36


State 16

   36 retourner: RETOURNER . expr POINT_VIRGULE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 44
    facteur  go to state 45


State 17

   24 declaration: TYPE_ENTIER . IDENTIFIANT POINT_VIRGULE
   27 declarationAffectation: TYPE_ENTIER . IDENTIFIANT AFFECTATION expr POINT_VIRGULE

    IDENTIFIANT  shift, and go to state 46


State 18

   25 declaration: TYPE_BOOLEEN . IDENTIFIANT POINT_VIRGULE
   28 declarationAffectation: TYPE_BOOLEEN . IDENTIFIANT AFFECTATION expr POINT_VIRGULE

    IDENTIFIANT  shift, and go to state 47


State 19

    1 prog: listeFonctions listeInstructions .

    $default  reduce using rule 1 (prog)


State 20

   13 listeInstructions: instruction .
   14                  | instruction . listeInstructions

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    $default  reduce using rule 13 (listeInstructions)

    listeInstructions       go to state 48
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 21

   15 instruction: ecrire .

    $default  reduce using rule 15 (instruction)


State 22

   16 instruction: declaration .

    $default  reduce using rule 16 (instruction)


State 23

   17 instruction: affectation .

    $default  reduce using rule 17 (instruction)


State 24

   18 instruction: declarationAffectation .

    $default  reduce using rule 18 (instruction)


State 25

   19 instruction: conditionnelle .

    $default  reduce using rule 19 (instruction)


State 26

   20 instruction: boucleTanque .

    $default  reduce using rule 20 (instruction)


State 27

   21 instruction: retourner .

    $default  reduce using rule 21 (instruction)


State 28

   22 instruction: appelFonction .

    $default  reduce using rule 22 (instruction)


State 29

    3 listeFonctions: fonction listeFonctions .

    $default  reduce using rule 3 (listeFonctions)


State 30

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT PARENTHESE_OUVRANTE . listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    TYPE_ENTIER   shift, and go to state 49
    TYPE_BOOLEEN  shift, and go to state 50

    listeParametres  go to state 51
    parametre        go to state 52


State 31

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT PARENTHESE_OUVRANTE . listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    TYPE_ENTIER   shift, and go to state 49
    TYPE_BOOLEEN  shift, and go to state 50

    listeParametres  go to state 53
    parametre        go to state 52


State 32

   37 appelFonction: IDENTIFIANT PARENTHESE_OUVRANTE . listeExpressions PARENTHESE_FERMANTE POINT_VIRGULE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr              go to state 54
    listeExpressions  go to state 55
    facteur           go to state 45


State 33

   26 affectation: IDENTIFIANT AFFECTATION . expr POINT_VIRGULE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 56
    facteur  go to state 45


State 34

   23 ecrire: ECRIRE PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE POINT_VIRGULE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 57
    facteur  go to state 45


State 35

   29 conditionnelle: SI PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   30               | SI PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi
   32               | SI PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 58
    facteur  go to state 45


State 36

   35 boucleTanque: TANT_QUE PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 59
    facteur  go to state 45


State 37

   57 facteur: IDENTIFIANT .
   61        | IDENTIFIANT . PARENTHESE_OUVRANTE listeExpressions PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 60

    $default  reduce using rule 57 (facteur)


State 38

   44 expr: PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 61
    facteur  go to state 45


State 39

   58 facteur: ENTIER .

    $default  reduce using rule 58 (facteur)


State 40

   60 facteur: LIRE . PARENTHESE_OUVRANTE PARENTHESE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 62


State 41

   53 expr: NON . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 63
    facteur  go to state 45


State 42

   43 expr: MOINS . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 64
    facteur  go to state 45


State 43

   59 facteur: BOOLEEN .

    $default  reduce using rule 59 (facteur)


State 44

   36 retourner: RETOURNER expr . POINT_VIRGULE
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    POINT_VIRGULE   shift, and go to state 65
    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    ET              shift, and go to state 72
    OU              shift, and go to state 73
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78


State 45

   54 expr: facteur .

    $default  reduce using rule 54 (expr)


State 46

   24 declaration: TYPE_ENTIER IDENTIFIANT . POINT_VIRGULE
   27 declarationAffectation: TYPE_ENTIER IDENTIFIANT . AFFECTATION expr POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 79
    AFFECTATION    shift, and go to state 80


State 47

   25 declaration: TYPE_BOOLEEN IDENTIFIANT . POINT_VIRGULE
   28 declarationAffectation: TYPE_BOOLEEN IDENTIFIANT . AFFECTATION expr POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 81
    AFFECTATION    shift, and go to state 82


State 48

   14 listeInstructions: instruction listeInstructions .

    $default  reduce using rule 14 (listeInstructions)


State 49

   12 parametre: TYPE_ENTIER . IDENTIFIANT

    IDENTIFIANT  shift, and go to state 83


State 50

   11 parametre: TYPE_BOOLEEN . IDENTIFIANT

    IDENTIFIANT  shift, and go to state 84


State 51

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT PARENTHESE_OUVRANTE listeParametres . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 85


State 52

    9 listeParametres: parametre .
   10                | parametre . VIRGULE listeParametres

    VIRGULE  shift, and go to state 86

    $default  reduce using rule 9 (listeParametres)


State 53

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT PARENTHESE_OUVRANTE listeParametres . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 87


State 54

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr
   55 listeExpressions: expr .
   56                 | expr . VIRGULE listeExpressions

    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    VIRGULE         shift, and go to state 88
    ET              shift, and go to state 72
    OU              shift, and go to state 73
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78

    $default  reduce using rule 55 (listeExpressions)


State 55

   37 appelFonction: IDENTIFIANT PARENTHESE_OUVRANTE listeExpressions . PARENTHESE_FERMANTE POINT_VIRGULE

    PARENTHESE_FERMANTE  shift, and go to state 89


State 56

   26 affectation: IDENTIFIANT AFFECTATION expr . POINT_VIRGULE
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    POINT_VIRGULE   shift, and go to state 90
    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    ET              shift, and go to state 72
    OU              shift, and go to state 73
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78


State 57

   23 ecrire: ECRIRE PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE POINT_VIRGULE
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    PARENTHESE_FERMANTE  shift, and go to state 91
    EGAL                 shift, and go to state 66
    DIFFERENT            shift, and go to state 67
    INFERIEUR            shift, and go to state 68
    SUPERIEUR            shift, and go to state 69
    INFERIEUR_EGAL       shift, and go to state 70
    SUPERIEUR_EGAL       shift, and go to state 71
    ET                   shift, and go to state 72
    OU                   shift, and go to state 73
    MOINS                shift, and go to state 74
    DIVISE               shift, and go to state 75
    MODULO               shift, and go to state 76
    FOIS                 shift, and go to state 77
    PLUS                 shift, and go to state 78


State 58

   29 conditionnelle: SI PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   30               | SI PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi
   32               | SI PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    PARENTHESE_FERMANTE  shift, and go to state 92
    EGAL                 shift, and go to state 66
    DIFFERENT            shift, and go to state 67
    INFERIEUR            shift, and go to state 68
    SUPERIEUR            shift, and go to state 69
    INFERIEUR_EGAL       shift, and go to state 70
    SUPERIEUR_EGAL       shift, and go to state 71
    ET                   shift, and go to state 72
    OU                   shift, and go to state 73
    MOINS                shift, and go to state 74
    DIVISE               shift, and go to state 75
    MODULO               shift, and go to state 76
    FOIS                 shift, and go to state 77
    PLUS                 shift, and go to state 78


State 59

   35 boucleTanque: TANT_QUE PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    PARENTHESE_FERMANTE  shift, and go to state 93
    EGAL                 shift, and go to state 66
    DIFFERENT            shift, and go to state 67
    INFERIEUR            shift, and go to state 68
    SUPERIEUR            shift, and go to state 69
    INFERIEUR_EGAL       shift, and go to state 70
    SUPERIEUR_EGAL       shift, and go to state 71
    ET                   shift, and go to state 72
    OU                   shift, and go to state 73
    MOINS                shift, and go to state 74
    DIVISE               shift, and go to state 75
    MODULO               shift, and go to state 76
    FOIS                 shift, and go to state 77
    PLUS                 shift, and go to state 78


State 60

   61 facteur: IDENTIFIANT PARENTHESE_OUVRANTE . listeExpressions PARENTHESE_FERMANTE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr              go to state 54
    listeExpressions  go to state 94
    facteur           go to state 45


State 61

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   44     | PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    PARENTHESE_FERMANTE  shift, and go to state 95
    EGAL                 shift, and go to state 66
    DIFFERENT            shift, and go to state 67
    INFERIEUR            shift, and go to state 68
    SUPERIEUR            shift, and go to state 69
    INFERIEUR_EGAL       shift, and go to state 70
    SUPERIEUR_EGAL       shift, and go to state 71
    ET                   shift, and go to state 72
    OU                   shift, and go to state 73
    MOINS                shift, and go to state 74
    DIVISE               shift, and go to state 75
    MODULO               shift, and go to state 76
    FOIS                 shift, and go to state 77
    PLUS                 shift, and go to state 78


State 62

   60 facteur: LIRE PARENTHESE_OUVRANTE . PARENTHESE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 96


State 63

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr
   53     | NON expr .

    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    ET              shift, and go to state 72
    OU              shift, and go to state 73
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78

    $default  reduce using rule 53 (expr)


State 64

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   43     | MOINS expr .
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    $default  reduce using rule 43 (expr)


State 65

   36 retourner: RETOURNER expr POINT_VIRGULE .

    $default  reduce using rule 36 (retourner)


State 66

   49 expr: expr EGAL . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 97
    facteur  go to state 45


State 67

   50 expr: expr DIFFERENT . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 98
    facteur  go to state 45


State 68

   47 expr: expr INFERIEUR . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 99
    facteur  go to state 45


State 69

   45 expr: expr SUPERIEUR . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 100
    facteur  go to state 45


State 70

   48 expr: expr INFERIEUR_EGAL . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 101
    facteur  go to state 45


State 71

   46 expr: expr SUPERIEUR_EGAL . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 102
    facteur  go to state 45


State 72

   51 expr: expr ET . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 103
    facteur  go to state 45


State 73

   52 expr: expr OU . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 104
    facteur  go to state 45


State 74

   39 expr: expr MOINS . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 105
    facteur  go to state 45


State 75

   41 expr: expr DIVISE . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 106
    facteur  go to state 45


State 76

   42 expr: expr MODULO . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 107
    facteur  go to state 45


State 77

   40 expr: expr FOIS . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 108
    facteur  go to state 45


State 78

   38 expr: expr PLUS . expr

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 109
    facteur  go to state 45


State 79

   24 declaration: TYPE_ENTIER IDENTIFIANT POINT_VIRGULE .

    $default  reduce using rule 24 (declaration)


State 80

   27 declarationAffectation: TYPE_ENTIER IDENTIFIANT AFFECTATION . expr POINT_VIRGULE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 110
    facteur  go to state 45


State 81

   25 declaration: TYPE_BOOLEEN IDENTIFIANT POINT_VIRGULE .

    $default  reduce using rule 25 (declaration)


State 82

   28 declarationAffectation: TYPE_BOOLEEN IDENTIFIANT AFFECTATION . expr POINT_VIRGULE

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 111
    facteur  go to state 45


State 83

   12 parametre: TYPE_ENTIER IDENTIFIANT .

    $default  reduce using rule 12 (parametre)


State 84

   11 parametre: TYPE_BOOLEEN IDENTIFIANT .

    $default  reduce using rule 11 (parametre)


State 85

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 112


State 86

   10 listeParametres: parametre VIRGULE . listeParametres

    TYPE_ENTIER   shift, and go to state 49
    TYPE_BOOLEEN  shift, and go to state 50

    listeParametres  go to state 113
    parametre        go to state 52


State 87

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 114


State 88

   56 listeExpressions: expr VIRGULE . listeExpressions

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr              go to state 54
    listeExpressions  go to state 115
    facteur           go to state 45


State 89

   37 appelFonction: IDENTIFIANT PARENTHESE_OUVRANTE listeExpressions PARENTHESE_FERMANTE . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 116


State 90

   26 affectation: IDENTIFIANT AFFECTATION expr POINT_VIRGULE .

    $default  reduce using rule 26 (affectation)


State 91

   23 ecrire: ECRIRE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 117


State 92

   29 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   30               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi
   32               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 118


State 93

   35 boucleTanque: TANT_QUE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 119


State 94

   61 facteur: IDENTIFIANT PARENTHESE_OUVRANTE listeExpressions . PARENTHESE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 120


State 95

   44 expr: PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE .

    $default  reduce using rule 44 (expr)


State 96

   60 facteur: LIRE PARENTHESE_OUVRANTE PARENTHESE_FERMANTE .

    $default  reduce using rule 60 (facteur)


State 97

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   49     | expr EGAL expr .
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78

    $default  reduce using rule 49 (expr)


State 98

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   50     | expr DIFFERENT expr .
   51     | expr . ET expr
   52     | expr . OU expr

    MOINS   shift, and go to state 74
    DIVISE  shift, and go to state 75
    MODULO  shift, and go to state 76
    FOIS    shift, and go to state 77
    PLUS    shift, and go to state 78

    $default  reduce using rule 50 (expr)


State 99

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   47     | expr INFERIEUR expr .
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    MOINS   shift, and go to state 74
    DIVISE  shift, and go to state 75
    MODULO  shift, and go to state 76
    FOIS    shift, and go to state 77
    PLUS    shift, and go to state 78

    $default  reduce using rule 47 (expr)


State 100

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   45     | expr SUPERIEUR expr .
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    MOINS   shift, and go to state 74
    DIVISE  shift, and go to state 75
    MODULO  shift, and go to state 76
    FOIS    shift, and go to state 77
    PLUS    shift, and go to state 78

    $default  reduce using rule 45 (expr)


State 101

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   48     | expr INFERIEUR_EGAL expr .
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    MOINS   shift, and go to state 74
    DIVISE  shift, and go to state 75
    MODULO  shift, and go to state 76
    FOIS    shift, and go to state 77
    PLUS    shift, and go to state 78

    $default  reduce using rule 48 (expr)


State 102

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   46     | expr SUPERIEUR_EGAL expr .
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    MOINS   shift, and go to state 74
    DIVISE  shift, and go to state 75
    MODULO  shift, and go to state 76
    FOIS    shift, and go to state 77
    PLUS    shift, and go to state 78

    $default  reduce using rule 46 (expr)


State 103

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   51     | expr ET expr .
   52     | expr . OU expr

    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    OU              shift, and go to state 73
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78

    $default  reduce using rule 51 (expr)


State 104

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr
   52     | expr OU expr .

    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78

    $default  reduce using rule 52 (expr)


State 105

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   39     | expr MOINS expr .
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    DIVISE  shift, and go to state 75
    MODULO  shift, and go to state 76
    FOIS    shift, and go to state 77

    $default  reduce using rule 39 (expr)


State 106

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   41     | expr DIVISE expr .
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    $default  reduce using rule 41 (expr)


State 107

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   42     | expr MODULO expr .
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    $default  reduce using rule 42 (expr)


State 108

   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   40     | expr FOIS expr .
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    $default  reduce using rule 40 (expr)


State 109

   38 expr: expr . PLUS expr
   38     | expr PLUS expr .
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    DIVISE  shift, and go to state 75
    MODULO  shift, and go to state 76
    FOIS    shift, and go to state 77

    $default  reduce using rule 38 (expr)


State 110

   27 declarationAffectation: TYPE_ENTIER IDENTIFIANT AFFECTATION expr . POINT_VIRGULE
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    POINT_VIRGULE   shift, and go to state 121
    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    ET              shift, and go to state 72
    OU              shift, and go to state 73
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78


State 111

   28 declarationAffectation: TYPE_BOOLEEN IDENTIFIANT AFFECTATION expr . POINT_VIRGULE
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    POINT_VIRGULE   shift, and go to state 122
    EGAL            shift, and go to state 66
    DIFFERENT       shift, and go to state 67
    INFERIEUR       shift, and go to state 68
    SUPERIEUR       shift, and go to state 69
    INFERIEUR_EGAL  shift, and go to state 70
    SUPERIEUR_EGAL  shift, and go to state 71
    ET              shift, and go to state 72
    OU              shift, and go to state 73
    MOINS           shift, and go to state 74
    DIVISE          shift, and go to state 75
    MODULO          shift, and go to state 76
    FOIS            shift, and go to state 77
    PLUS            shift, and go to state 78


State 112

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 123
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 113

   10 listeParametres: parametre VIRGULE listeParametres .

    $default  reduce using rule 10 (listeParametres)


State 114

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 124
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 115

   56 listeExpressions: expr VIRGULE listeExpressions .

    $default  reduce using rule 56 (listeExpressions)


State 116

   37 appelFonction: IDENTIFIANT PARENTHESE_OUVRANTE listeExpressions PARENTHESE_FERMANTE POINT_VIRGULE .

    $default  reduce using rule 37 (appelFonction)


State 117

   23 ecrire: ECRIRE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE POINT_VIRGULE .

    $default  reduce using rule 23 (ecrire)


State 118

   29 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE
   30               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE listeSinonSi
   32               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 125
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 119

   35 boucleTanque: TANT_QUE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 126
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 120

   61 facteur: IDENTIFIANT PARENTHESE_OUVRANTE listeExpressions PARENTHESE_FERMANTE .

    $default  reduce using rule 61 (facteur)


State 121

   27 declarationAffectation: TYPE_ENTIER IDENTIFIANT AFFECTATION expr POINT_VIRGULE .

    $default  reduce using rule 27 (declarationAffectation)


State 122

   28 declarationAffectation: TYPE_BOOLEEN IDENTIFIANT AFFECTATION expr POINT_VIRGULE .

    $default  reduce using rule 28 (declarationAffectation)


State 123

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 127


State 124

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 128


State 125

   29 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE
   30               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE listeSinonSi
   32               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 129


State 126

   35 boucleTanque: TANT_QUE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 130


State 127

    7 declarationFonctionEntier: TYPE_ENTIER IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE .

    $default  reduce using rule 7 (declarationFonctionEntier)


State 128

    8 declarationFonctionBooleen: TYPE_BOOLEEN IDENTIFIANT PARENTHESE_OUVRANTE listeParametres PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE .

    $default  reduce using rule 8 (declarationFonctionBooleen)


State 129

   29 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE .
   30               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE . SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   31               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE . listeSinonSi
   32               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE . listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    SINON     shift, and go to state 131
    SINON_SI  shift, and go to state 132

    $default  reduce using rule 29 (conditionnelle)

    listeSinonSi  go to state 133


State 130

   35 boucleTanque: TANT_QUE PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE .

    $default  reduce using rule 35 (boucleTanque)


State 131

   30 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 134


State 132

   33 listeSinonSi: SINON_SI . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   34             | SINON_SI . PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi

    PARENTHESE_OUVRANTE  shift, and go to state 135


State 133

   31 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi .
   32               | SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi . SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    SINON  shift, and go to state 136

    $default  reduce using rule 31 (conditionnelle)


State 134

   30 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 137
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 135

   33 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   34             | SINON_SI PARENTHESE_OUVRANTE . expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi

    IDENTIFIANT          shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    ENTIER               shift, and go to state 39
    LIRE                 shift, and go to state 40
    NON                  shift, and go to state 41
    MOINS                shift, and go to state 42
    BOOLEEN              shift, and go to state 43

    expr     go to state 138
    facteur  go to state 45


State 136

   32 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 139


State 137

   30 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 140


State 138

   33 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   34             | SINON_SI PARENTHESE_OUVRANTE expr . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi
   38 expr: expr . PLUS expr
   39     | expr . MOINS expr
   40     | expr . FOIS expr
   41     | expr . DIVISE expr
   42     | expr . MODULO expr
   45     | expr . SUPERIEUR expr
   46     | expr . SUPERIEUR_EGAL expr
   47     | expr . INFERIEUR expr
   48     | expr . INFERIEUR_EGAL expr
   49     | expr . EGAL expr
   50     | expr . DIFFERENT expr
   51     | expr . ET expr
   52     | expr . OU expr

    PARENTHESE_FERMANTE  shift, and go to state 141
    EGAL                 shift, and go to state 66
    DIFFERENT            shift, and go to state 67
    INFERIEUR            shift, and go to state 68
    SUPERIEUR            shift, and go to state 69
    INFERIEUR_EGAL       shift, and go to state 70
    SUPERIEUR_EGAL       shift, and go to state 71
    ET                   shift, and go to state 72
    OU                   shift, and go to state 73
    MOINS                shift, and go to state 74
    DIVISE               shift, and go to state 75
    MODULO               shift, and go to state 76
    FOIS                 shift, and go to state 77
    PLUS                 shift, and go to state 78


State 139

   32 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 142
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 140

   30 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE .

    $default  reduce using rule 30 (conditionnelle)


State 141

   33 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE
   34             | SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi

    ACCOLADE_OUVRANTE  shift, and go to state 143


State 142

   32 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 144


State 143

   33 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE
   34             | SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . listeInstructions ACCOLADE_FERMANTE listeSinonSi

    IDENTIFIANT   shift, and go to state 12
    ECRIRE        shift, and go to state 13
    SI            shift, and go to state 14
    TANT_QUE      shift, and go to state 15
    RETOURNER     shift, and go to state 16
    TYPE_ENTIER   shift, and go to state 17
    TYPE_BOOLEEN  shift, and go to state 18

    listeInstructions       go to state 145
    instruction             go to state 20
    ecrire                  go to state 21
    declaration             go to state 22
    affectation             go to state 23
    declarationAffectation  go to state 24
    conditionnelle          go to state 25
    boucleTanque            go to state 26
    retourner               go to state 27
    appelFonction           go to state 28


State 144

   32 conditionnelle: SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi SINON ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE .

    $default  reduce using rule 32 (conditionnelle)


State 145

   33 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE
   34             | SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions . ACCOLADE_FERMANTE listeSinonSi

    ACCOLADE_FERMANTE  shift, and go to state 146


State 146

   33 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE .
   34             | SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE . listeSinonSi

    SINON_SI  shift, and go to state 132

    $default  reduce using rule 33 (listeSinonSi)

    listeSinonSi  go to state 147


State 147

   34 listeSinonSi: SINON_SI PARENTHESE_OUVRANTE expr PARENTHESE_FERMANTE ACCOLADE_OUVRANTE listeInstructions ACCOLADE_FERMANTE listeSinonSi .

    $default  reduce using rule 34 (listeSinonSi)
